# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    # Adds a fallback USERPROVIDER_KEY if the env var is not set.
    # This allows you to run cache:warmup even if your
    # environment variables are not available yet.
    # You should not need to change this value.
    env(USERPROVIDER_KEY): ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    #Editted
    App\Security\AuthUserProvider:
        class: App\Security\AuthUserProvider
        arguments: ['@doctrine', '%env(USERPROVIDER_KEY)%', '%doctrine.default_entity_manager%']

    App\Template\AnnotationMenuExtension:
        class: App\Template\AnnotationMenuExtension
        arguments: ["App\\Controller", "../src/Controller", "%kernel.root_dir%", "@annotation_reader"]

    App\Log\Doctrine\EntityEventListener:
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    App\DataCollector\AuthSecurityDataCollector:
        decorates: data_collector.security

    App\Template\MenuBuilder:
        arguments:
            - !tagged app.menu_extension

    _instanceof:
        App\Template\MenuExtensionInterface:
            tags: ['app.menu_extension']